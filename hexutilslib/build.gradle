
/*
 * Copyright (c) 2020. Ingo Noka
 * This file belongs to project HEXUTILS-LIB-MP.
 * This work is licensed under the Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported License.
 * To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-nd/3.0/ or send a letter to
 * Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.
 *
 */

plugins {
    id 'org.jetbrains.kotlin.multiplatform'
}

apply plugin: 'com.android.library'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'org.asciidoctor.jvm.convert'
apply plugin: 'maven-publish'

repositories {
    google()
    jcenter()
    mavenCentral()
    maven {
        url = 'https://dl.bintray.com/kotlin/kotlinx.html'
    } // a dependency in the dokka gradle plugin
    maven {
        url = "https://dl.bintray.com/kotlin/kotlin-dev"
    } // for dokka
    maven {
        allowInsecureProtocol = true
        url "http://209.97.175.64:8081/artifactory/libs-release-local"
        credentials {
            username = artifactory_user
            password = artifactory_password
        }
    }
//    maven {
//        name = "utilslibPackages"
//        url = uri("https://maven.pkg.github.com/ingonoka/HEXUTILS-LIB-MP")
//        credentials {
//            username = "ingonoka"
//            password = "b5c6a065568f3fbcff1d61c57dd76fbc5a3226f6"
//        }
//    }
}

version = getVersionName()
group = domain

android {
    compileSdkVersion 29
    buildToolsVersion "30.0.0"

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
        null
    }

    buildTypes {
        release {
            matchingFallbacks = ['debug']
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            matchingFallbacks = ['release']
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        return void
    }

    lintOptions {
        abortOnError false
        disable 'InvalidPackage' // prevent warning of invalid package javax.naming in BouncyCastle library
        return void
    }

    packagingOptions {
        exclude "META-INF/atomicfu.kotlin_module"
        exclude "META-INF/kotlinx-io.kotlin_module"
        exclude "META-INF/kotlinx-coroutines-core.kotlin_module"
        exclude "META-INF/kotlinx-serialization-runtime.kotlin_module"
        exclude "META-INF/kotlin-logging.kotlin_module"
        exclude "META-INF/AL2.0"
        exclude "META-INF/LGPL2.1"
        return void
    }

    null
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //noinspection GradleCompatible
    implementation 'com.android.support:appcompat-v7:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

kotlin {
    jvm {
        compilations.main.kotlinOptions {
            jvmTarget = "1.8"
        }
        compilations.test.kotlinOptions {
            jvmTarget = "1.8"
        }
    }

    android {
        publishLibraryVariants("release", "debug")
    }

    sourceSets {
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }
        jvmTest {
            dependencies {
                implementation kotlin('test-junit')
            }
        }
        androidTest {
            dependencies {
                implementation kotlin('test-junit')
            }
        }
    }
}

publishing {
    publications.all {
        pom {
            name = 'HEXUTILS Library'
            description = 'A library for converting byte arrays to hex strings'
            licenses {
                license {
                    name = pom_licenseName
                    url = pom_licenseUrl
                }
            }
            developers { developer { name = pom_developer } }
        }
    }

    repositories {
        // tag::mavenRepository[]
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/ingonoka/HEXUTILS-LIB-MP")
            credentials {
                username = github_username
                password = github_password
            }
        }
        // end::mavenRepository[]
    }
}

artifactory {
    contextUrl = 'http://209.97.175.64:8081/artifactory'
    publish {
        repository {
            repoKey = artifactory_repokey
            username = artifactory_user
            password = artifactory_password
        }

        defaults {
            publishArtifacts = true
            publications(publishing.publications.names.toArray())
        }
    }
}
dokkaHtml {
    outputDirectory = "$buildDir/dokka"
    dokkaSourceSets {
        jvmMain { // Or source set name, for single-platform the default source sets are `main` and `test`
            moduleDisplayName = "HEXUTILS lib JVM"
            // This name will be shown in the final output
            displayName = "JVM"
            // Platform used for code analysis. See the "Platforms" section of this readme
            platform = "jvm"
            // Specifies the location of the project source code on the Web.
            // If provided, Dokka generates "source" links for each declaration.
            // Repeat for multiple mappings
            sourceLink {
                // Unix based directory relative path to the root of the project (where you execute gradle respectively).
                path = "hexutilslib/src/jvmMain/kotlin/" // or simply "./"

                // URL showing where the source code can be accessed through the web browser
                url = "https://github.com/ingonoka/hexutilslib/blob/master/hexutilslib/src/jvmMain/kotlin/"

                // Suffix which is used to append the line number to the URL. Use #L for GitHub
                lineSuffix = "#L"
            }
        }

        androidMain { // Or source set name, for single-platform the default source sets are `main` and `test`
            moduleDisplayName = "HEXUTILS lib JVM"
            // This name will be shown in the final output
            displayName = "Android"
            // Platform used for code analysis. See the "Platforms" section of this readme
            platform = "android"
            // Specifies the location of the project source code on the Web.
            // If provided, Dokka generates "source" links for each declaration.
            // Repeat for multiple mappings
            sourceLink {
                // Unix based directory relative path to the root of the project (where you execute gradle respectively).
                path = "hexutilslib/src/main/java/" // or simply "./"

                // URL showing where the source code can be accessed through the web browser
                url = "https://github.com/ingonoka/hexutilslib/blob/master/hexutilslib/src/main/java/"

                // Suffix which is used to append the line number to the URL. Use #L for GitHub
                lineSuffix = "#L"
            }
        }

        commonMain {
            moduleDisplayName = "BERTLV Light JVM"
            // This name will be shown in the final output
            displayName = "Common"
            // Platform used for code analysis. See the "Platforms" section of this readme
            platform = "common"

            sourceLink {
                // Unix based directory relative path to the root of the project (where you execute gradle respectively).
                path = "hexutilslib/src/commonMain/kotlin/" // or simply "./"

                // URL showing where the source code can be accessed through the web browser
                url = "https://github.com/ingonoka/hexutilslib/blob/master/hexutilslib/src/commonMain/kotlin/"

                // Suffix which is used to append the line number to the URL. Use #L for GitHub
                lineSuffix = "#L"
            }
        }
    }
}

asciidoctor {
    baseDirFollowsSourceDir()
    sourceDir file('doc')
    outputDir file('build/docs')

    asciidoctorj {
        attributes 'source-highlighter': 'rouge'
        attributes 'library-version': getVersionName()
    }
}
